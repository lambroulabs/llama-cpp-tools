name: Build and Release Packages

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build \
            debhelper devscripts dpkg-dev \
            nlohmann-json3-dev lcov curl libcurl4-openssl-dev catch2
      - name: Build with CMake + CPack (with coverage)
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug \
                   -DBUILD_EXAMPLES=OFF \
                   -DCMAKE_CXX_FLAGS="--coverage -O0 -g"
          cmake --build . -- -j$(nproc)

      - name: Run tests (Ubuntu)
        run: |
          cd build
          ctest --output-on-failure
        continue-on-error: true

      - name: Generate coverage report (Ubuntu)
        run: |
          cd build
          lcov --capture --directory . --output-file coverage.info --ignore-errors source
          lcov --remove coverage.info '/usr/*' 'tests/*' --output-file coverage.info --ignore-errors source
          genhtml coverage.info --output-directory coverage-html

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-coverage
          path: build/coverage-html

      - name: Package with CPack and Debian policy
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build -- -j$(nproc)
          (cd build && cpack -G DEB && cpack -G TGZ)
          cd /home/runner/work/llama-cpp-tools/llama-cpp-tools/packaging
          dpkg-buildpackage -us -uc -b

      - name: Upload Debian artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-packages
          path: ../*.deb

  build-fedora:
    runs-on: ubuntu-latest
    container: fedora:39
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: dnf install -y cmake gcc make rpm-build json-devel lcov gcc-c++ curl-devel catch-devel

      - name: Build with CMake + CPack (with coverage)
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug \
                   -DCMAKE_CXX_FLAGS="--coverage -O0 -g"
          cmake --build . -- -j$(nproc)
          cpack -G RPM

      - name: Run tests (Fedora)
        run: |
          cd build
          ctest --output-on-failure
        continue-on-error: true

      - name: Generate coverage report (Fedora)
        run: |
          cd build
          lcov --capture --directory . --output-file coverage.info --ignore-errors source
          lcov --remove coverage.info '/usr/*' 'tests/*' --output-file coverage.info --ignore-errors source
          genhtml coverage.info --output-directory coverage-html

      - name: Upload Fedora coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: fedora-coverage
          path: build/coverage-html

      - name: Build RPM from spec
        run: |
          dnf install -y rpmdevtools
          rpmdev-setuptree
          cp packaging/RHEL/llama-cpp-tools.spec ~/rpmbuild/SPECS/
          cp ../*.tar.gz ~/rpmbuild/SOURCES/
          rpmbuild -ba ~/rpmbuild/SPECS/llama-cpp-tools.spec

      - name: Upload Fedora RPM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fedora-rpms
          path: /github/home/rpmbuild/RPMS/**/*.rpm

  build-arch:
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: pacman -Syu --noconfirm base-devel git cmake nlohmann-json lcov curl gcc catch2

      - name: Compute SHA256 of release tarball
        run: |
          curl -L -o v${{ github.ref_name }}.tar.gz \
            https://github.com/lambroulabs/llama-cpp-tools/archive/refs/tags/${{ github.ref_name }}.tar.gz
          SHA=$(sha256sum ${{ github.ref_name }}.tar.gz | awk '{print $1}')
          sed -i "s/sha256sums=('SKIP')/sha256sums=('${SHA}')/" packaging/arch/PKGBUILD

      - name: Build Arch package (with coverage)
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug \
                   -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
                   -DCMAKE_CXX_FLAGS="--coverage -O0 -g"
          cmake --build . -- -j$(nproc)
          ctest --output-on-failure || true
          lcov --capture --directory . --output-file coverage.info --ignore-errors source
          lcov --remove coverage.info '/usr/*' 'tests/*' --output-file coverage.info --ignore-errors source
          genhtml coverage.info --output-directory coverage-html
          cd ..
          useradd -m builder
          chown -R builder:builder .
          cd packaging/arch
          su builder -c "makepkg -si --noconfirm --clean --syncdeps"

      - name: Upload Arch coverage
        uses: actions/upload-artifact@v4
        with:
          name: arch-coverage
          path: build/coverage-html

      - name: Upload Arch package
        uses: actions/upload-artifact@v4
        with:
          name: arch-packages
          path: "*.pkg.tar.zst"
